import streamlit as st
import json
import firebase_admin
from firebase_admin import credentials, firestore
import datetime

# Cargar configuraci√≥n de Firebase desde los secrets de Streamlit
firebase_config = json.loads(json.dumps(st.secrets["firebase"]))

# Inicializar Firebase si no est√° ya inicializado
if not firebase_admin._apps:
    cred = credentials.Certificate(firebase_config)
    firebase_admin.initialize_app(cred)

db = firestore.client()

# Funci√≥n para obtener acciones de la pizarra
def get_actions():
    docs = db.collection("actions").stream()
    return [{"id": doc.id, **doc.to_dict()} for doc in docs]

# Inicializar sesi√≥n para manejar estado
if "show_action_form" not in st.session_state:
    st.session_state["show_action_form"] = False

# T√≠tulo principal
st.title("üìå Daily Huddle - Enrique")

# Bot√≥n para mostrar el formulario
if st.button("‚ûï Agregar Acci√≥n"):
    st.session_state["show_action_form"] = not st.session_state["show_action_form"]

# Mostrar formulario solo si el bot√≥n ha sido presionado
if st.session_state["show_action_form"]:
    st.subheader("Agregar Nueva Acci√≥n")
    action_text = st.text_area("Describe la acci√≥n:", key="action_input")
    action_priority = st.selectbox("Prioridad:", ["Alta", "Media", "Baja"], key="priority_input")
    
    if st.button("Guardar acci√≥n"):
        if action_text:
            action_data = {
                "text": action_text,
                "priority": action_priority,
                "timestamp": datetime.datetime.utcnow()
            }
            db.collection("actions").add(action_data)
            st.success("‚úÖ Acci√≥n guardada correctamente")
            st.session_state["show_action_form"] = False
            st.experimental_rerun()  # Recargar para reflejar cambios
        else:
            st.error("‚ö†Ô∏è Debes escribir una acci√≥n antes de guardar.")

# Secci√≥n de la Pizarra de Acciones
st.subheader("üìå Pizarra de Acciones")
actions = get_actions()

if actions:
    for action in actions:
        st.write(f"üìù **{action['text']}** | üî• *{action['priority']}* | ‚è≥ {action['timestamp'].strftime('%Y-%m-%d %H:%M')}")
else:
    st.info("No hay acciones registradas a√∫n.")
